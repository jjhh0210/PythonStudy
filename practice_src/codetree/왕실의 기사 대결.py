'''
move = [(-1,0), (0,1),(1,0),(-1,0)]
<조건>
- LXL 크기의 체스판, (1,1)시작⭐️
- 칸: 0빈칸, 1함정 , 2벽(체스 OOR도 벽)
- 기사: (r,c 좌측상단 기준 h x w 크기 직사각형, 체력k)
- 명령받으면 상하좌우 중 한칸 이동, 이동시 연쇄작용, 끝에 벽있으면 모두 이동 못함⭐️
    - 없어진 기사에게 명령 내리면 반응 x️️️⭐️⭐️

- 해당 기사 한칸⭐️ 이동 (연쇄 이동 -> 이동한 곳에 밀려난 기사내부 함정 개수만큼 체력깎임)
    - 밀려난 기사들 피해봄: 함정의 수만큼만 피해 (명령받은애는 피해 x, 함정 없으면 피해 x)
    - 피해를 받은 만큼 체력이 깎이게 되며,
    - 현재 체력 이상의 대미지를 받을 경우 기사는 체스판에서 사라지게 됩니다.
    - 기사들은 모두 밀린 이후에 대미지를 입게 됩니다⭐️
        - 벽에 막혀서 이동 못하면 대미지 x!!!⭐️)

 Q 번의 대결이 모두 끝난 후 생존한 기사들이 총 받은 대미지의 합

<input>
4 3 3       # L체스판크기,N기사개수,Q번대결(명령)
0 0 1 0     # 체스판 (0 빈칸, 1 함정, 2 벽)
0 0 1 0
1 1 0 1
0 0 2 0
# 1~N번 기사 정보 차례대로
1 2 2 1 5  # (r,c),h세로,w가로,k초기체력
2 1 2 1 1
3 2 1 2 3
# Q개 명령정보
1 2 # i번기사, d방향으로 한칸 이동(0~3:위, 오른, 아래, 왼//시계방향!!)
2 1
3 3
'''
import sys
input = sys.stdin.readline

L,N,Q = map(int, input().split())
# (1,1)~(L,L) 이니까 그냥 외곽 벽으로 감싸기! OOR 신경 안써도 됨 이제~~
board = [ [2]*(L+2) for _ in range(L+2)]
knights = [[0]*(L+2) for _ in range(L+2)]
for i in range(1,L+1):
    board[i][1:L+1] = list(map(int, input().split()))
pos = [ (0,0) for _ in range(N+1)]   # pos[기사번호] = [r,c]
h = [0]*(N+1)   #h
w = [0]*(N+1)   #w
hp = [0]*(N+1)  #k

c_dmg = [0]*(N+1)
total_dmg = [0]*(N+1)
for i in range(1,N+1):
    r,c,h,w,k = map(int, input().split())
    pos[i] = (r,c)
    h[i] = h
    w[i] = w
    hp[i] = k

commands = [tuple(map(int, input())) for _ in range(Q)]
# 0~3:   0위,    1오른,  2아래,  3왼    //시계방향!!
di = [-1,0,1,0]
dj = [0,1,0,-1]

## 대결 시작!
for idx, d in commands:
    # 1. 이동 가능한지  검사


